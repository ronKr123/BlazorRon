@page "/UsersDetailsMangerPage"
@using System.Reflection.Metadata;
@inject NavigationManager nav
@inject IJSRuntime JSRuntime
@layout SideBarManger
@inject ApiService api

<style>
    .context-menu {
        display: none;
        position: absolute;
        background-color: #fff;
        border: 1px solid #ddd;
        padding: 5px;
    }
</style>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

<h3 class="display-4 text-center">רשימת המשתמשים</h3>

<style>
    body {
        background-color: lightblue;
    }
</style>



@if (GetUsers != null)
{
    <table class="table table-striped table-bordered table-hover" style="direction:rtl;text-align:center;">
        <thead>
            <tr>
                <th>שם פרטי</th>
                <th>שם משפחה</th>
                <th>עיר מגורים</th>
                <th>שם המשתמש</th>
@*                 <th>הסיסמה</th>
 *@                <th>אימייל</th>
                <th>אפשרויות נוספות</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Users user in GetUsers)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.CityCode.CityName</td>
                    <td>@user.UserName</td>
@*                     <td>@user.UserPassword</td>
 *@                    <td>@user.Email</td>
                    <td>
                        <button class="btn btn-outline-primary" @onclick="@(async () => await UpdateAUser(user))">עדכון המשתמש</button>
                        <button class="btn btn-outline-danger" @onclick="@(async () => await DeleteAUser(user))">מחיקת המשתמש</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

@code {

    
    public UsersList GetUsers { get; set; }




    protected async override Task OnInitializedAsync()
    {
        GetUsers = await api.SelectAllUsers();
    }


    private async Task UpdateAUser(Users user)
    {
        //still not done...
    }

    private async Task DeleteAUser(Users user)
    {
        if (user != null)
        {
            int x = await api.DeleteAUser(user);
            GetUsers = await api.SelectAllUsers();
        }
    }
}

