@page "/LendingsUsers"
@inject ApiService api
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@layout SideBarManger


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />


<style>
    body{
        background-color: lightblue !important;
    }
</style>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

<body style="background-color: lightblue;">
    <h3 class="text-center mb-4">השאלות המשתמשים</h3>

    @if (lendings != null)
    {
        <table class="table table-striped table-bordered table-hover" style="direction:rtl;text-align:center;">
            <thead>
                <tr>
                    <th>שם המשתמש</th>
                    <th>שם הספר המושאל</th>
                    <th>ז'אנר הספר</th>
                    <th>תאריך השאלה</th>
                    <th>תאריך ההחזרה</th>
                    <th>אפשרויות נוספות</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var lending in lendings)
                {
                    <tr>
                        <td>@lending.UserCode.UserName</td>
                        <td>@lending.BookCode.BookName</td>
                        <td>@lending.BookCode.GenreCode.GenreName</td>
                        <td>@lending.DateOfLending.ToShortDateString()</td>
                        <td>
                            @if (lending.DateOfReturn == DateTime.Parse("1/1/2001"))
                            {
                                <b>הספר עדיין לא הוחזר</b>
                            }
                            else
                            {
                                @lending.DateOfReturn.ToShortDateString()
                            }
                        </td>
                        <td>
                            <button class="btn btn-outline-primary" @onclick="@(async () => await UpdateLending(lending))">עדכון ההשאלה</button>
                            <button class="btn btn-outline-danger" @onclick="@(async () => await DeleteLending(lending))">מחיקת ההשאלה</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>הנתונים נטענים - נא להמתין</p>
    }
</body>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>





@code {

    private LendingAndReturnsBooksList lendings;

    private LendingAndReturnsBooks selectedLending;

    protected override async Task OnInitializedAsync()
    {
        lendings = await api.SelectAllLendingAndReturnsBooks();
    }



    private async Task UpdateLending(LendingAndReturnsBooks lending)
    {
       //still not done...
    }

    private async Task DeleteLending(LendingAndReturnsBooks lending)
    {
        if (lending != null)
        {
            int x = await api.DeleteALendingAndReturnBook(lending);
            lendings = await api.SelectAllLendingAndReturnsBooks();
        }
    }


}
