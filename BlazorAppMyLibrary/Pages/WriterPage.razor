@page "/writerPage/{WriterId:int}"
@layout NewLayoutUser
@inject ApiService api

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">


@if (writer != null && writerBooks != null)
{
    <div class="col" style="margin-left:30px;">
        <h2 class="text-center mb-5">פרטי הסופר\ת : @writer.FirstName @writer.LastName</h2>

        <div class="row">
            <div class="col-md-6 mb-4 custom-col">
                <h2 class="text-center mb-3">: ספרים נוספים שכתב\ה</h2>
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var book in writerBooks)
                    {
                        <div class="col" style="">
                            <div class="card h-100">
                                <img src="@($"data:image/png;base64,{book.BookPic}")" class="card-img-top" alt="Book Name">
                                <div class="card-footer text-center">
                                    <h3 class="card-title">@book.BookName</h3>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="col-md-6 text-center" style="font-size:30px;">
                <p>שם פרטי: <strong> @writer.FirstName </strong></p>
                <p>שם משפחה: <strong> @writer.LastName </strong></p>
                <p>תאריך לידה: <strong> @writer.DateOfBirth.ToShortDateString() </strong></p>
                <p>ז'אנר כתיבה: <strong> @writer.GenreWriting.GenreName </strong></p>
                <p>
                    קישור לביוגרפיה: <strong>
                        <a href="@writer.LinkToBiography" target="_blank">לחצו כאן</a>
                    </strong>
                </p>
            </div>
        </div>


    </div>
}


<style>
    body{
        background-color:lightblue;
    }

    .custom-card {
        margin-left: 20px;
        max-width: 200px;
    }

    

</style>


@code {
    [Parameter]
    public int WriterId{ get; set; }


    private Writers writer;

    private BooksList writerBooks;

    protected override async Task OnInitializedAsync()
    {
        WritersList writers = await api.SelectAllWriters();
        writer = writers.Find(x => x.Id == WriterId);

        writerBooks = new BooksList();

        BooksList books = await api.SelectAllBooks();
        foreach(Books book in books)
        {
            if (book.WriterCode.Id == WriterId)
            {
                writerBooks.Add(book);
            }
        }

    }

}
